generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?
  username  String?
  password  String?
  createdAt DateTime @default(now())
  role      Role     @default(USER)
  blocked   Boolean  @default(false)

  conversations UserConversation[]

  seenMessages Message[] @relation("Seen")

  messages Message[]
}

enum Role {
  USER
  ADMIN
}

model Conversation {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  lastMessageAt DateTime @default(now())
  name          String?
  isGroup       Boolean?

  messages Message[]

  users UserConversation[]
}

model Message {
  id        Int      @id @default(autoincrement())
  body      String?
  image     String?
  createdAt DateTime @default(now())

  seen User[] @relation("Seen")

  conversationId Int
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  senderId Int
  sender   User @relation(fields: [senderId], references: [id], onDelete: Cascade)
}

model UserConversation {
  userId         Int
  conversationId Int

  user         User         @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [conversationId], references: [id])

  @@id([userId, conversationId])
}
